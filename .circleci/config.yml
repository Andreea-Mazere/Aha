version: 2
jobs:
  build:
    working_directory: ~/Aha
    docker:
      - image: circleci/node:9.8.0-browsers
    steps:
      - checkout
      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-dependencies
          command: npm install
      # Cache local dependencies if they don't exist
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
              - node_modules
      - run:
          name: angular-build
          command: npm run build
      - run:
          name: angular-test
          command: npm run test -- --watch=false
      # Cache the dist folder for the deploy job
      - save_cache:
          key: dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
              - dist
# The deploy job
  deploy:
    working_directory: ~/Aha
    docker:
      - image: circleci/node:9.8.0-browsers
    steps:
      - checkout
      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      - run:
          name: Install firebase CLI
          command: sudo npm install -g firebase-tools
      # Restore cache from the build job which contains the
      # dist folder that needs to be deployed
      - restore_cache:
          key: dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}    
      - run:
          name: deploy to correct environment according to branch
          command: |
            if [ "${CIRCLE_BRANCH}" == "dev" ]; then
                firebaseEnv = default
            elif [ "${CIRCLE_BRANCH}" == "test" ]; then
                firebaseEnv = test
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
                firebaseEnv = production
            fi
            openssl aes-256-cbc -d -in './firebase-service-key-'+$firebaseEnv+'-encrypted' -out ./firebase-service-key.json -k $FIREBASE_SERVICE_KEY
            node ./app/migrations.js ./firebase-service-key.json
            firebase use $firebaseEnv
            firebase deploy --token=$FIREBASE_TOKEN --non-interactive

workflows:
    version: 2
    # The build and deploy workflow
    build_and_deploy:
        jobs:
            - build
            # The deploy job will only run on the filtered branches and
            # require the build job to be successful before it starts
            - deploy:
                requires:
                    - build
                filters:
                    branches:
                        only:
                            - dev
                            - test
                            - master